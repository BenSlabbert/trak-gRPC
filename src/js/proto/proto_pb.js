/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.io.github.benslabbert.trak.grpc.Empty', null, global);
goog.exportSymbol('proto.io.github.benslabbert.trak.grpc.LatestResponse', null, global);
goog.exportSymbol('proto.io.github.benslabbert.trak.grpc.LatestResponseItem', null, global);
goog.exportSymbol('proto.io.github.benslabbert.trak.grpc.PageResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.github.benslabbert.trak.grpc.Empty = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.github.benslabbert.trak.grpc.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.io.github.benslabbert.trak.grpc.Empty.displayName = 'proto.io.github.benslabbert.trak.grpc.Empty';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.io.github.benslabbert.trak.grpc.Empty.prototype.toObject = function(opt_includeInstance) {
        return proto.io.github.benslabbert.trak.grpc.Empty.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.io.github.benslabbert.trak.grpc.Empty} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.io.github.benslabbert.trak.grpc.Empty.toObject = function(includeInstance, msg) {
        var f, obj = {

        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.github.benslabbert.trak.grpc.Empty}
 */
proto.io.github.benslabbert.trak.grpc.Empty.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.io.github.benslabbert.trak.grpc.Empty;
    return proto.io.github.benslabbert.trak.grpc.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.github.benslabbert.trak.grpc.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.github.benslabbert.trak.grpc.Empty}
 */
proto.io.github.benslabbert.trak.grpc.Empty.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.github.benslabbert.trak.grpc.Empty.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.io.github.benslabbert.trak.grpc.Empty.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.github.benslabbert.trak.grpc.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.github.benslabbert.trak.grpc.Empty.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.github.benslabbert.trak.grpc.LatestResponseItem = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.github.benslabbert.trak.grpc.LatestResponseItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.io.github.benslabbert.trak.grpc.LatestResponseItem.displayName = 'proto.io.github.benslabbert.trak.grpc.LatestResponseItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.io.github.benslabbert.trak.grpc.LatestResponseItem.prototype.toObject = function(opt_includeInstance) {
        return proto.io.github.benslabbert.trak.grpc.LatestResponseItem.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.io.github.benslabbert.trak.grpc.LatestResponseItem} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.io.github.benslabbert.trak.grpc.LatestResponseItem.toObject = function(includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getFieldWithDefault(msg, 1, ""),
            url: jspb.Message.getFieldWithDefault(msg, 2, ""),
            price: jspb.Message.getFieldWithDefault(msg, 3, "")
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.github.benslabbert.trak.grpc.LatestResponseItem}
 */
proto.io.github.benslabbert.trak.grpc.LatestResponseItem.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.io.github.benslabbert.trak.grpc.LatestResponseItem;
    return proto.io.github.benslabbert.trak.grpc.LatestResponseItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.github.benslabbert.trak.grpc.LatestResponseItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.github.benslabbert.trak.grpc.LatestResponseItem}
 */
proto.io.github.benslabbert.trak.grpc.LatestResponseItem.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setUrl(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setPrice(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.github.benslabbert.trak.grpc.LatestResponseItem.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.io.github.benslabbert.trak.grpc.LatestResponseItem.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.github.benslabbert.trak.grpc.LatestResponseItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.github.benslabbert.trak.grpc.LatestResponseItem.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = message.getUrl();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = message.getPrice();
    if (f.length > 0) {
        writer.writeString(
            3,
            f
        );
    }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.io.github.benslabbert.trak.grpc.LatestResponseItem.prototype.getName = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.io.github.benslabbert.trak.grpc.LatestResponseItem.prototype.setName = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.io.github.benslabbert.trak.grpc.LatestResponseItem.prototype.getUrl = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.io.github.benslabbert.trak.grpc.LatestResponseItem.prototype.setUrl = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional string price = 3;
 * @return {string}
 */
proto.io.github.benslabbert.trak.grpc.LatestResponseItem.prototype.getPrice = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.io.github.benslabbert.trak.grpc.LatestResponseItem.prototype.setPrice = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.github.benslabbert.trak.grpc.PageResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.github.benslabbert.trak.grpc.PageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.io.github.benslabbert.trak.grpc.PageResponse.displayName = 'proto.io.github.benslabbert.trak.grpc.PageResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.io.github.benslabbert.trak.grpc.PageResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.io.github.benslabbert.trak.grpc.PageResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.io.github.benslabbert.trak.grpc.PageResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            currentPageNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
            lastPageNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
            totalItems: jspb.Message.getFieldWithDefault(msg, 3, 0),
            pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
            isLastPage: jspb.Message.getFieldWithDefault(msg, 5, false),
            isFirstPage: jspb.Message.getFieldWithDefault(msg, 6, false)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.github.benslabbert.trak.grpc.PageResponse}
 */
proto.io.github.benslabbert.trak.grpc.PageResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.io.github.benslabbert.trak.grpc.PageResponse;
    return proto.io.github.benslabbert.trak.grpc.PageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.github.benslabbert.trak.grpc.PageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.github.benslabbert.trak.grpc.PageResponse}
 */
proto.io.github.benslabbert.trak.grpc.PageResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setCurrentPageNumber(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setLastPageNumber(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setTotalItems(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setPageSize(value);
                break;
            case 5:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsLastPage(value);
                break;
            case 6:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsFirstPage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.io.github.benslabbert.trak.grpc.PageResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.github.benslabbert.trak.grpc.PageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.github.benslabbert.trak.grpc.PageResponse.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getCurrentPageNumber();
    if (f !== 0) {
        writer.writeInt64(
            1,
            f
        );
    }
    f = message.getLastPageNumber();
    if (f !== 0) {
        writer.writeInt64(
            2,
            f
        );
    }
    f = message.getTotalItems();
    if (f !== 0) {
        writer.writeInt64(
            3,
            f
        );
    }
    f = message.getPageSize();
    if (f !== 0) {
        writer.writeInt64(
            4,
            f
        );
    }
    f = message.getIsLastPage();
    if (f) {
        writer.writeBool(
            5,
            f
        );
    }
    f = message.getIsFirstPage();
    if (f) {
        writer.writeBool(
            6,
            f
        );
    }
};


/**
 * optional int64 current_page_number = 1;
 * @return {number}
 */
proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.getCurrentPageNumber = function() {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.setCurrentPageNumber = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 last_page_number = 2;
 * @return {number}
 */
proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.getLastPageNumber = function() {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.setLastPageNumber = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 total_items = 3;
 * @return {number}
 */
proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.getTotalItems = function() {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.setTotalItems = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 page_size = 4;
 * @return {number}
 */
proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.getPageSize = function() {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.setPageSize = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional bool is_last_page = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.getIsLastPage = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.setIsLastPage = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional bool is_first_page = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.getIsFirstPage = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.io.github.benslabbert.trak.grpc.PageResponse.prototype.setIsFirstPage = function(value) {
    jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.github.benslabbert.trak.grpc.LatestResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.io.github.benslabbert.trak.grpc.LatestResponse.repeatedFields_, null);
};
goog.inherits(proto.io.github.benslabbert.trak.grpc.LatestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.io.github.benslabbert.trak.grpc.LatestResponse.displayName = 'proto.io.github.benslabbert.trak.grpc.LatestResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.github.benslabbert.trak.grpc.LatestResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.io.github.benslabbert.trak.grpc.LatestResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.io.github.benslabbert.trak.grpc.LatestResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.io.github.benslabbert.trak.grpc.LatestResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.io.github.benslabbert.trak.grpc.LatestResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemsList: jspb.Message.toObjectList(msg.getItemsList(),
                proto.io.github.benslabbert.trak.grpc.LatestResponseItem.toObject, includeInstance),
            page: (f = msg.getPage()) && proto.io.github.benslabbert.trak.grpc.PageResponse.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.github.benslabbert.trak.grpc.LatestResponse}
 */
proto.io.github.benslabbert.trak.grpc.LatestResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.io.github.benslabbert.trak.grpc.LatestResponse;
    return proto.io.github.benslabbert.trak.grpc.LatestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.github.benslabbert.trak.grpc.LatestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.github.benslabbert.trak.grpc.LatestResponse}
 */
proto.io.github.benslabbert.trak.grpc.LatestResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.io.github.benslabbert.trak.grpc.LatestResponseItem;
                reader.readMessage(value,proto.io.github.benslabbert.trak.grpc.LatestResponseItem.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            case 2:
                var value = new proto.io.github.benslabbert.trak.grpc.PageResponse;
                reader.readMessage(value,proto.io.github.benslabbert.trak.grpc.PageResponse.deserializeBinaryFromReader);
                msg.setPage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.github.benslabbert.trak.grpc.LatestResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.io.github.benslabbert.trak.grpc.LatestResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.github.benslabbert.trak.grpc.LatestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.github.benslabbert.trak.grpc.LatestResponse.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            1,
            f,
            proto.io.github.benslabbert.trak.grpc.LatestResponseItem.serializeBinaryToWriter
        );
    }
    f = message.getPage();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.io.github.benslabbert.trak.grpc.PageResponse.serializeBinaryToWriter
        );
    }
};


/**
 * repeated LatestResponseItem items = 1;
 * @return {!Array.<!proto.io.github.benslabbert.trak.grpc.LatestResponseItem>}
 */
proto.io.github.benslabbert.trak.grpc.LatestResponse.prototype.getItemsList = function() {
    return /** @type{!Array.<!proto.io.github.benslabbert.trak.grpc.LatestResponseItem>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.io.github.benslabbert.trak.grpc.LatestResponseItem, 1));
};


/** @param {!Array.<!proto.io.github.benslabbert.trak.grpc.LatestResponseItem>} value */
proto.io.github.benslabbert.trak.grpc.LatestResponse.prototype.setItemsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.github.benslabbert.trak.grpc.LatestResponseItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.github.benslabbert.trak.grpc.LatestResponseItem}
 */
proto.io.github.benslabbert.trak.grpc.LatestResponse.prototype.addItems = function(opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.github.benslabbert.trak.grpc.LatestResponseItem, opt_index);
};


proto.io.github.benslabbert.trak.grpc.LatestResponse.prototype.clearItemsList = function() {
    this.setItemsList([]);
};


/**
 * optional PageResponse page = 2;
 * @return {?proto.io.github.benslabbert.trak.grpc.PageResponse}
 */
proto.io.github.benslabbert.trak.grpc.LatestResponse.prototype.getPage = function() {
    return /** @type{?proto.io.github.benslabbert.trak.grpc.PageResponse} */ (
        jspb.Message.getWrapperField(this, proto.io.github.benslabbert.trak.grpc.PageResponse, 2));
};


/** @param {?proto.io.github.benslabbert.trak.grpc.PageResponse|undefined} value */
proto.io.github.benslabbert.trak.grpc.LatestResponse.prototype.setPage = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.io.github.benslabbert.trak.grpc.LatestResponse.prototype.clearPage = function() {
    this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.io.github.benslabbert.trak.grpc.LatestResponse.prototype.hasPage = function() {
    return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.io.github.benslabbert.trak.grpc);
