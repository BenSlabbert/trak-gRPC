// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/main/proto/proto.proto

package io_github_benslabbert_trak_grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type ChartDataMessage struct {
	Labels               []string               `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	DataSets             []*ChartDataSetMessage `protobuf:"bytes,2,rep,name=data_sets,json=dataSets,proto3" json:"data_sets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ChartDataMessage) Reset()         { *m = ChartDataMessage{} }
func (m *ChartDataMessage) String() string { return proto.CompactTextString(m) }
func (*ChartDataMessage) ProtoMessage()    {}
func (*ChartDataMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{1}
}

func (m *ChartDataMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartDataMessage.Unmarshal(m, b)
}
func (m *ChartDataMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartDataMessage.Marshal(b, m, deterministic)
}
func (m *ChartDataMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartDataMessage.Merge(m, src)
}
func (m *ChartDataMessage) XXX_Size() int {
	return xxx_messageInfo_ChartDataMessage.Size(m)
}
func (m *ChartDataMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartDataMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChartDataMessage proto.InternalMessageInfo

func (m *ChartDataMessage) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ChartDataMessage) GetDataSets() []*ChartDataSetMessage {
	if m != nil {
		return m.DataSets
	}
	return nil
}

type ChartDataSetMessage struct {
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	FillColor            string   `protobuf:"bytes,2,opt,name=fill_color,json=fillColor,proto3" json:"fill_color,omitempty"`
	StrokeColor          string   `protobuf:"bytes,3,opt,name=stroke_color,json=strokeColor,proto3" json:"stroke_color,omitempty"`
	PointColor           string   `protobuf:"bytes,4,opt,name=point_color,json=pointColor,proto3" json:"point_color,omitempty"`
	PointStrokeColor     string   `protobuf:"bytes,5,opt,name=point_stroke_color,json=pointStrokeColor,proto3" json:"point_stroke_color,omitempty"`
	PointHighlightFill   string   `protobuf:"bytes,6,opt,name=point_highlight_fill,json=pointHighlightFill,proto3" json:"point_highlight_fill,omitempty"`
	PointHighlightStroke string   `protobuf:"bytes,7,opt,name=point_highlight_stroke,json=pointHighlightStroke,proto3" json:"point_highlight_stroke,omitempty"`
	Data                 []int64  `protobuf:"varint,8,rep,packed,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartDataSetMessage) Reset()         { *m = ChartDataSetMessage{} }
func (m *ChartDataSetMessage) String() string { return proto.CompactTextString(m) }
func (*ChartDataSetMessage) ProtoMessage()    {}
func (*ChartDataSetMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{2}
}

func (m *ChartDataSetMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartDataSetMessage.Unmarshal(m, b)
}
func (m *ChartDataSetMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartDataSetMessage.Marshal(b, m, deterministic)
}
func (m *ChartDataSetMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartDataSetMessage.Merge(m, src)
}
func (m *ChartDataSetMessage) XXX_Size() int {
	return xxx_messageInfo_ChartDataSetMessage.Size(m)
}
func (m *ChartDataSetMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartDataSetMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChartDataSetMessage proto.InternalMessageInfo

func (m *ChartDataSetMessage) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *ChartDataSetMessage) GetFillColor() string {
	if m != nil {
		return m.FillColor
	}
	return ""
}

func (m *ChartDataSetMessage) GetStrokeColor() string {
	if m != nil {
		return m.StrokeColor
	}
	return ""
}

func (m *ChartDataSetMessage) GetPointColor() string {
	if m != nil {
		return m.PointColor
	}
	return ""
}

func (m *ChartDataSetMessage) GetPointStrokeColor() string {
	if m != nil {
		return m.PointStrokeColor
	}
	return ""
}

func (m *ChartDataSetMessage) GetPointHighlightFill() string {
	if m != nil {
		return m.PointHighlightFill
	}
	return ""
}

func (m *ChartDataSetMessage) GetPointHighlightStroke() string {
	if m != nil {
		return m.PointHighlightStroke
	}
	return ""
}

func (m *ChartDataSetMessage) GetData() []int64 {
	if m != nil {
		return m.Data
	}
	return nil
}

type BrandMessage struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrandMessage) Reset()         { *m = BrandMessage{} }
func (m *BrandMessage) String() string { return proto.CompactTextString(m) }
func (*BrandMessage) ProtoMessage()    {}
func (*BrandMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{3}
}

func (m *BrandMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrandMessage.Unmarshal(m, b)
}
func (m *BrandMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrandMessage.Marshal(b, m, deterministic)
}
func (m *BrandMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrandMessage.Merge(m, src)
}
func (m *BrandMessage) XXX_Size() int {
	return xxx_messageInfo_BrandMessage.Size(m)
}
func (m *BrandMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BrandMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BrandMessage proto.InternalMessageInfo

func (m *BrandMessage) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BrandMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CategoryMessage struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CategoryMessage) Reset()         { *m = CategoryMessage{} }
func (m *CategoryMessage) String() string { return proto.CompactTextString(m) }
func (*CategoryMessage) ProtoMessage()    {}
func (*CategoryMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{4}
}

func (m *CategoryMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryMessage.Unmarshal(m, b)
}
func (m *CategoryMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryMessage.Marshal(b, m, deterministic)
}
func (m *CategoryMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryMessage.Merge(m, src)
}
func (m *CategoryMessage) XXX_Size() int {
	return xxx_messageInfo_CategoryMessage.Size(m)
}
func (m *CategoryMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryMessage proto.InternalMessageInfo

func (m *CategoryMessage) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CategoryMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ProductMessage struct {
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProductUrl           string             `protobuf:"bytes,2,opt,name=product_url,json=productUrl,proto3" json:"product_url,omitempty"`
	Price                string             `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	ImageUrl             string             `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Id                   int64              `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	Brand                *BrandMessage      `protobuf:"bytes,6,opt,name=brand,proto3" json:"brand,omitempty"`
	Categories           []*CategoryMessage `protobuf:"bytes,7,rep,name=categories,proto3" json:"categories,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ProductMessage) Reset()         { *m = ProductMessage{} }
func (m *ProductMessage) String() string { return proto.CompactTextString(m) }
func (*ProductMessage) ProtoMessage()    {}
func (*ProductMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{5}
}

func (m *ProductMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductMessage.Unmarshal(m, b)
}
func (m *ProductMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductMessage.Marshal(b, m, deterministic)
}
func (m *ProductMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductMessage.Merge(m, src)
}
func (m *ProductMessage) XXX_Size() int {
	return xxx_messageInfo_ProductMessage.Size(m)
}
func (m *ProductMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ProductMessage proto.InternalMessageInfo

func (m *ProductMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductMessage) GetProductUrl() string {
	if m != nil {
		return m.ProductUrl
	}
	return ""
}

func (m *ProductMessage) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *ProductMessage) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *ProductMessage) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ProductMessage) GetBrand() *BrandMessage {
	if m != nil {
		return m.Brand
	}
	return nil
}

func (m *ProductMessage) GetCategories() []*CategoryMessage {
	if m != nil {
		return m.Categories
	}
	return nil
}

type PageResponse struct {
	CurrentPageNumber    int64    `protobuf:"varint,1,opt,name=current_page_number,json=currentPageNumber,proto3" json:"current_page_number,omitempty"`
	LastPageNumber       int64    `protobuf:"varint,2,opt,name=last_page_number,json=lastPageNumber,proto3" json:"last_page_number,omitempty"`
	TotalItems           int64    `protobuf:"varint,3,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	PageSize             int64    `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	IsLastPage           bool     `protobuf:"varint,5,opt,name=is_last_page,json=isLastPage,proto3" json:"is_last_page,omitempty"`
	IsFirstPage          bool     `protobuf:"varint,6,opt,name=is_first_page,json=isFirstPage,proto3" json:"is_first_page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageResponse) Reset()         { *m = PageResponse{} }
func (m *PageResponse) String() string { return proto.CompactTextString(m) }
func (*PageResponse) ProtoMessage()    {}
func (*PageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{6}
}

func (m *PageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageResponse.Unmarshal(m, b)
}
func (m *PageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageResponse.Marshal(b, m, deterministic)
}
func (m *PageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageResponse.Merge(m, src)
}
func (m *PageResponse) XXX_Size() int {
	return xxx_messageInfo_PageResponse.Size(m)
}
func (m *PageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PageResponse proto.InternalMessageInfo

func (m *PageResponse) GetCurrentPageNumber() int64 {
	if m != nil {
		return m.CurrentPageNumber
	}
	return 0
}

func (m *PageResponse) GetLastPageNumber() int64 {
	if m != nil {
		return m.LastPageNumber
	}
	return 0
}

func (m *PageResponse) GetTotalItems() int64 {
	if m != nil {
		return m.TotalItems
	}
	return 0
}

func (m *PageResponse) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PageResponse) GetIsLastPage() bool {
	if m != nil {
		return m.IsLastPage
	}
	return false
}

func (m *PageResponse) GetIsFirstPage() bool {
	if m != nil {
		return m.IsFirstPage
	}
	return false
}

type LatestResponse struct {
	Products             []*ProductMessage `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	Page                 *PageResponse     `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LatestResponse) Reset()         { *m = LatestResponse{} }
func (m *LatestResponse) String() string { return proto.CompactTextString(m) }
func (*LatestResponse) ProtoMessage()    {}
func (*LatestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{7}
}

func (m *LatestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatestResponse.Unmarshal(m, b)
}
func (m *LatestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatestResponse.Marshal(b, m, deterministic)
}
func (m *LatestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatestResponse.Merge(m, src)
}
func (m *LatestResponse) XXX_Size() int {
	return xxx_messageInfo_LatestResponse.Size(m)
}
func (m *LatestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LatestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LatestResponse proto.InternalMessageInfo

func (m *LatestResponse) GetProducts() []*ProductMessage {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *LatestResponse) GetPage() *PageResponse {
	if m != nil {
		return m.Page
	}
	return nil
}

type PromotionRequest struct {
	// Types that are valid to be assigned to Deal:
	//	*PromotionRequest_DailyDeal
	//	*PromotionRequest_SaleDeal
	Deal                 isPromotionRequest_Deal `protobuf_oneof:"deal"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PromotionRequest) Reset()         { *m = PromotionRequest{} }
func (m *PromotionRequest) String() string { return proto.CompactTextString(m) }
func (*PromotionRequest) ProtoMessage()    {}
func (*PromotionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{8}
}

func (m *PromotionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PromotionRequest.Unmarshal(m, b)
}
func (m *PromotionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PromotionRequest.Marshal(b, m, deterministic)
}
func (m *PromotionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PromotionRequest.Merge(m, src)
}
func (m *PromotionRequest) XXX_Size() int {
	return xxx_messageInfo_PromotionRequest.Size(m)
}
func (m *PromotionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PromotionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PromotionRequest proto.InternalMessageInfo

type isPromotionRequest_Deal interface {
	isPromotionRequest_Deal()
}

type PromotionRequest_DailyDeal struct {
	DailyDeal bool `protobuf:"varint,1,opt,name=daily_deal,json=dailyDeal,proto3,oneof"`
}

type PromotionRequest_SaleDeal struct {
	SaleDeal bool `protobuf:"varint,2,opt,name=sale_deal,json=saleDeal,proto3,oneof"`
}

func (*PromotionRequest_DailyDeal) isPromotionRequest_Deal() {}

func (*PromotionRequest_SaleDeal) isPromotionRequest_Deal() {}

func (m *PromotionRequest) GetDeal() isPromotionRequest_Deal {
	if m != nil {
		return m.Deal
	}
	return nil
}

func (m *PromotionRequest) GetDailyDeal() bool {
	if x, ok := m.GetDeal().(*PromotionRequest_DailyDeal); ok {
		return x.DailyDeal
	}
	return false
}

func (m *PromotionRequest) GetSaleDeal() bool {
	if x, ok := m.GetDeal().(*PromotionRequest_SaleDeal); ok {
		return x.SaleDeal
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PromotionRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PromotionRequest_DailyDeal)(nil),
		(*PromotionRequest_SaleDeal)(nil),
	}
}

type PromotionResponse struct {
	Products             []*ProductMessage `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PromotionResponse) Reset()         { *m = PromotionResponse{} }
func (m *PromotionResponse) String() string { return proto.CompactTextString(m) }
func (*PromotionResponse) ProtoMessage()    {}
func (*PromotionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{9}
}

func (m *PromotionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PromotionResponse.Unmarshal(m, b)
}
func (m *PromotionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PromotionResponse.Marshal(b, m, deterministic)
}
func (m *PromotionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PromotionResponse.Merge(m, src)
}
func (m *PromotionResponse) XXX_Size() int {
	return xxx_messageInfo_PromotionResponse.Size(m)
}
func (m *PromotionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PromotionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PromotionResponse proto.InternalMessageInfo

func (m *PromotionResponse) GetProducts() []*ProductMessage {
	if m != nil {
		return m.Products
	}
	return nil
}

type ProductResponse struct {
	Product              *ProductMessage       `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Stats                *ProductStatsResponse `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ProductResponse) Reset()         { *m = ProductResponse{} }
func (m *ProductResponse) String() string { return proto.CompactTextString(m) }
func (*ProductResponse) ProtoMessage()    {}
func (*ProductResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{10}
}

func (m *ProductResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductResponse.Unmarshal(m, b)
}
func (m *ProductResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductResponse.Marshal(b, m, deterministic)
}
func (m *ProductResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductResponse.Merge(m, src)
}
func (m *ProductResponse) XXX_Size() int {
	return xxx_messageInfo_ProductResponse.Size(m)
}
func (m *ProductResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProductResponse proto.InternalMessageInfo

func (m *ProductResponse) GetProduct() *ProductMessage {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *ProductResponse) GetStats() *ProductStatsResponse {
	if m != nil {
		return m.Stats
	}
	return nil
}

type ProductRequest struct {
	ProductId            int64    `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductRequest) Reset()         { *m = ProductRequest{} }
func (m *ProductRequest) String() string { return proto.CompactTextString(m) }
func (*ProductRequest) ProtoMessage()    {}
func (*ProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{11}
}

func (m *ProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductRequest.Unmarshal(m, b)
}
func (m *ProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductRequest.Marshal(b, m, deterministic)
}
func (m *ProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductRequest.Merge(m, src)
}
func (m *ProductRequest) XXX_Size() int {
	return xxx_messageInfo_ProductRequest.Size(m)
}
func (m *ProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProductRequest proto.InternalMessageInfo

func (m *ProductRequest) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

type ProductStatsResponse struct {
	MinPrice             int64             `protobuf:"varint,1,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
	MaxPrice             int64             `protobuf:"varint,2,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	MeanPrice            float64           `protobuf:"fixed64,3,opt,name=mean_price,json=meanPrice,proto3" json:"mean_price,omitempty"`
	ChartData            *ChartDataMessage `protobuf:"bytes,4,opt,name=chart_data,json=chartData,proto3" json:"chart_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProductStatsResponse) Reset()         { *m = ProductStatsResponse{} }
func (m *ProductStatsResponse) String() string { return proto.CompactTextString(m) }
func (*ProductStatsResponse) ProtoMessage()    {}
func (*ProductStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{12}
}

func (m *ProductStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductStatsResponse.Unmarshal(m, b)
}
func (m *ProductStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductStatsResponse.Marshal(b, m, deterministic)
}
func (m *ProductStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductStatsResponse.Merge(m, src)
}
func (m *ProductStatsResponse) XXX_Size() int {
	return xxx_messageInfo_ProductStatsResponse.Size(m)
}
func (m *ProductStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProductStatsResponse proto.InternalMessageInfo

func (m *ProductStatsResponse) GetMinPrice() int64 {
	if m != nil {
		return m.MinPrice
	}
	return 0
}

func (m *ProductStatsResponse) GetMaxPrice() int64 {
	if m != nil {
		return m.MaxPrice
	}
	return 0
}

func (m *ProductStatsResponse) GetMeanPrice() float64 {
	if m != nil {
		return m.MeanPrice
	}
	return 0
}

func (m *ProductStatsResponse) GetChartData() *ChartDataMessage {
	if m != nil {
		return m.ChartData
	}
	return nil
}

type SearchResponse struct {
	Results              []*SearchResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{13}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetResults() []*SearchResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type SearchResult struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Score                float32  `protobuf:"fixed32,3,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResult) Reset()         { *m = SearchResult{} }
func (m *SearchResult) String() string { return proto.CompactTextString(m) }
func (*SearchResult) ProtoMessage()    {}
func (*SearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{14}
}

func (m *SearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResult.Unmarshal(m, b)
}
func (m *SearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResult.Marshal(b, m, deterministic)
}
func (m *SearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResult.Merge(m, src)
}
func (m *SearchResult) XXX_Size() int {
	return xxx_messageInfo_SearchResult.Size(m)
}
func (m *SearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResult proto.InternalMessageInfo

func (m *SearchResult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SearchResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchResult) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type SearchRequest struct {
	Search               string   `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{15}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type BrandRequest struct {
	BrandId              int64    `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrandRequest) Reset()         { *m = BrandRequest{} }
func (m *BrandRequest) String() string { return proto.CompactTextString(m) }
func (*BrandRequest) ProtoMessage()    {}
func (*BrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{16}
}

func (m *BrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrandRequest.Unmarshal(m, b)
}
func (m *BrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrandRequest.Marshal(b, m, deterministic)
}
func (m *BrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrandRequest.Merge(m, src)
}
func (m *BrandRequest) XXX_Size() int {
	return xxx_messageInfo_BrandRequest.Size(m)
}
func (m *BrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BrandRequest proto.InternalMessageInfo

func (m *BrandRequest) GetBrandId() int64 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

type CategoryRequest struct {
	CategoryId           int64    `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CategoryRequest) Reset()         { *m = CategoryRequest{} }
func (m *CategoryRequest) String() string { return proto.CompactTextString(m) }
func (*CategoryRequest) ProtoMessage()    {}
func (*CategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{17}
}

func (m *CategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryRequest.Unmarshal(m, b)
}
func (m *CategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryRequest.Marshal(b, m, deterministic)
}
func (m *CategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryRequest.Merge(m, src)
}
func (m *CategoryRequest) XXX_Size() int {
	return xxx_messageInfo_CategoryRequest.Size(m)
}
func (m *CategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryRequest proto.InternalMessageInfo

func (m *CategoryRequest) GetCategoryId() int64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

type CategoryResponse struct {
	CategoryId           int64             `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Products             []*ProductMessage `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CategoryResponse) Reset()         { *m = CategoryResponse{} }
func (m *CategoryResponse) String() string { return proto.CompactTextString(m) }
func (*CategoryResponse) ProtoMessage()    {}
func (*CategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{18}
}

func (m *CategoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryResponse.Unmarshal(m, b)
}
func (m *CategoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryResponse.Marshal(b, m, deterministic)
}
func (m *CategoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryResponse.Merge(m, src)
}
func (m *CategoryResponse) XXX_Size() int {
	return xxx_messageInfo_CategoryResponse.Size(m)
}
func (m *CategoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryResponse proto.InternalMessageInfo

func (m *CategoryResponse) GetCategoryId() int64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *CategoryResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CategoryResponse) GetProducts() []*ProductMessage {
	if m != nil {
		return m.Products
	}
	return nil
}

type BrandResponse struct {
	BrandId              int64             `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Products             []*ProductMessage `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BrandResponse) Reset()         { *m = BrandResponse{} }
func (m *BrandResponse) String() string { return proto.CompactTextString(m) }
func (*BrandResponse) ProtoMessage()    {}
func (*BrandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{19}
}

func (m *BrandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrandResponse.Unmarshal(m, b)
}
func (m *BrandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrandResponse.Marshal(b, m, deterministic)
}
func (m *BrandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrandResponse.Merge(m, src)
}
func (m *BrandResponse) XXX_Size() int {
	return xxx_messageInfo_BrandResponse.Size(m)
}
func (m *BrandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BrandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BrandResponse proto.InternalMessageInfo

func (m *BrandResponse) GetBrandId() int64 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

func (m *BrandResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BrandResponse) GetProducts() []*ProductMessage {
	if m != nil {
		return m.Products
	}
	return nil
}

type AddProductRequest struct {
	PlId                 string   `protobuf:"bytes,1,opt,name=pl_id,json=plId,proto3" json:"pl_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddProductRequest) Reset()         { *m = AddProductRequest{} }
func (m *AddProductRequest) String() string { return proto.CompactTextString(m) }
func (*AddProductRequest) ProtoMessage()    {}
func (*AddProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{20}
}

func (m *AddProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProductRequest.Unmarshal(m, b)
}
func (m *AddProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProductRequest.Marshal(b, m, deterministic)
}
func (m *AddProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProductRequest.Merge(m, src)
}
func (m *AddProductRequest) XXX_Size() int {
	return xxx_messageInfo_AddProductRequest.Size(m)
}
func (m *AddProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddProductRequest proto.InternalMessageInfo

func (m *AddProductRequest) GetPlId() string {
	if m != nil {
		return m.PlId
	}
	return ""
}

type AddProductResponse struct {
	ProductId            int64    `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddProductResponse) Reset()         { *m = AddProductResponse{} }
func (m *AddProductResponse) String() string { return proto.CompactTextString(m) }
func (*AddProductResponse) ProtoMessage()    {}
func (*AddProductResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5340d8317c1db441, []int{21}
}

func (m *AddProductResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProductResponse.Unmarshal(m, b)
}
func (m *AddProductResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProductResponse.Marshal(b, m, deterministic)
}
func (m *AddProductResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProductResponse.Merge(m, src)
}
func (m *AddProductResponse) XXX_Size() int {
	return xxx_messageInfo_AddProductResponse.Size(m)
}
func (m *AddProductResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProductResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddProductResponse proto.InternalMessageInfo

func (m *AddProductResponse) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "io.github.benslabbert.trak.grpc.Empty")
	proto.RegisterType((*ChartDataMessage)(nil), "io.github.benslabbert.trak.grpc.ChartDataMessage")
	proto.RegisterType((*ChartDataSetMessage)(nil), "io.github.benslabbert.trak.grpc.ChartDataSetMessage")
	proto.RegisterType((*BrandMessage)(nil), "io.github.benslabbert.trak.grpc.BrandMessage")
	proto.RegisterType((*CategoryMessage)(nil), "io.github.benslabbert.trak.grpc.CategoryMessage")
	proto.RegisterType((*ProductMessage)(nil), "io.github.benslabbert.trak.grpc.ProductMessage")
	proto.RegisterType((*PageResponse)(nil), "io.github.benslabbert.trak.grpc.PageResponse")
	proto.RegisterType((*LatestResponse)(nil), "io.github.benslabbert.trak.grpc.LatestResponse")
	proto.RegisterType((*PromotionRequest)(nil), "io.github.benslabbert.trak.grpc.PromotionRequest")
	proto.RegisterType((*PromotionResponse)(nil), "io.github.benslabbert.trak.grpc.PromotionResponse")
	proto.RegisterType((*ProductResponse)(nil), "io.github.benslabbert.trak.grpc.ProductResponse")
	proto.RegisterType((*ProductRequest)(nil), "io.github.benslabbert.trak.grpc.ProductRequest")
	proto.RegisterType((*ProductStatsResponse)(nil), "io.github.benslabbert.trak.grpc.ProductStatsResponse")
	proto.RegisterType((*SearchResponse)(nil), "io.github.benslabbert.trak.grpc.SearchResponse")
	proto.RegisterType((*SearchResult)(nil), "io.github.benslabbert.trak.grpc.SearchResult")
	proto.RegisterType((*SearchRequest)(nil), "io.github.benslabbert.trak.grpc.SearchRequest")
	proto.RegisterType((*BrandRequest)(nil), "io.github.benslabbert.trak.grpc.BrandRequest")
	proto.RegisterType((*CategoryRequest)(nil), "io.github.benslabbert.trak.grpc.CategoryRequest")
	proto.RegisterType((*CategoryResponse)(nil), "io.github.benslabbert.trak.grpc.CategoryResponse")
	proto.RegisterType((*BrandResponse)(nil), "io.github.benslabbert.trak.grpc.BrandResponse")
	proto.RegisterType((*AddProductRequest)(nil), "io.github.benslabbert.trak.grpc.AddProductRequest")
	proto.RegisterType((*AddProductResponse)(nil), "io.github.benslabbert.trak.grpc.AddProductResponse")
}

func init() { proto.RegisterFile("src/main/proto/proto.proto", fileDescriptor_5340d8317c1db441) }

var fileDescriptor_5340d8317c1db441 = []byte{
	// 1144 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0x4d, 0x6f, 0x1b, 0xc5,
	0x1b, 0xff, 0xef, 0xfa, 0x6d, 0xf7, 0x71, 0xe2, 0xa6, 0xd3, 0x28, 0xf2, 0x3f, 0x28, 0x4a, 0xd8,
	0x03, 0x18, 0x09, 0x9c, 0xd4, 0x69, 0x3f, 0x40, 0x93, 0x52, 0x62, 0xb5, 0x20, 0xb3, 0x16, 0x07,
	0xb8, 0x2c, 0x63, 0xef, 0xc4, 0x1e, 0x75, 0x5f, 0xdc, 0x99, 0x71, 0xd5, 0x54, 0x42, 0x1c, 0x39,
	0x70, 0xe5, 0x0e, 0x57, 0xbe, 0x01, 0x57, 0xbe, 0x0b, 0x47, 0xae, 0xdc, 0xd1, 0xbc, 0xad, 0xd7,
	0x25, 0xc5, 0x9b, 0xa2, 0xf6, 0x12, 0x79, 0x9e, 0xe7, 0xf7, 0xbc, 0xcc, 0xef, 0x79, 0x99, 0x0d,
	0xec, 0x73, 0x36, 0x3d, 0x4e, 0x31, 0xcd, 0x8e, 0x17, 0x2c, 0x17, 0xb9, 0xfe, 0xdb, 0x57, 0x7f,
	0xd1, 0x21, 0xcd, 0xfb, 0x33, 0x2a, 0xe6, 0xcb, 0x49, 0x7f, 0x42, 0x32, 0x9e, 0xe0, 0xc9, 0x84,
	0x30, 0xd1, 0x17, 0x0c, 0x3f, 0xed, 0xcf, 0xd8, 0x62, 0x1a, 0xb4, 0xa0, 0xf1, 0x69, 0xba, 0x10,
	0x57, 0xc1, 0x77, 0xb0, 0x73, 0x3e, 0xc7, 0x4c, 0x3c, 0xc4, 0x02, 0x7f, 0x4e, 0x38, 0xc7, 0x33,
	0x82, 0xf6, 0xa0, 0x99, 0xe0, 0x09, 0x49, 0x78, 0xd7, 0x39, 0xaa, 0xf5, 0xfc, 0xd0, 0x9c, 0xd0,
	0x97, 0xe0, 0xc7, 0x58, 0xe0, 0x88, 0x13, 0xc1, 0xbb, 0xee, 0x51, 0xad, 0xd7, 0x1e, 0xdc, 0xeb,
	0x6f, 0x88, 0xd4, 0x2f, 0xbc, 0x8f, 0x89, 0x30, 0x01, 0x42, 0x2f, 0xd6, 0x67, 0x1e, 0xfc, 0xe6,
	0xc2, 0x9d, 0x6b, 0x10, 0x68, 0x17, 0x1a, 0x2a, 0x68, 0xd7, 0x39, 0x72, 0x7a, 0x7e, 0xa8, 0x0f,
	0xe8, 0x00, 0xe0, 0x92, 0x26, 0x49, 0x34, 0xcd, 0x93, 0x9c, 0x75, 0x5d, 0xa5, 0xf2, 0xa5, 0xe4,
	0x5c, 0x0a, 0xd0, 0xfb, 0xb0, 0xc5, 0x05, 0xcb, 0x9f, 0x12, 0x03, 0xa8, 0x29, 0x40, 0x5b, 0xcb,
	0x34, 0xe4, 0x10, 0xda, 0x8b, 0x9c, 0x66, 0xc2, 0x20, 0xea, 0x0a, 0x01, 0x4a, 0xa4, 0x01, 0x1f,
	0x03, 0xd2, 0x80, 0x35, 0x4f, 0x0d, 0x85, 0xdb, 0x51, 0x9a, 0x71, 0xc9, 0xdd, 0x09, 0xec, 0x6a,
	0xf4, 0x9c, 0xce, 0xe6, 0x09, 0x9d, 0xcd, 0x45, 0x24, 0xd3, 0xe9, 0x36, 0x15, 0x5e, 0x7b, 0xba,
	0xb0, 0xaa, 0x47, 0x34, 0x49, 0xd0, 0x3d, 0xd8, 0x7b, 0xd5, 0x42, 0x47, 0xea, 0xb6, 0x94, 0xcd,
	0xee, 0xba, 0x8d, 0x0e, 0x86, 0x10, 0xd4, 0x25, 0x65, 0x5d, 0xef, 0xa8, 0xd6, 0xab, 0x85, 0xea,
	0x77, 0x30, 0x80, 0xad, 0x33, 0x86, 0xb3, 0xd8, 0x52, 0xd6, 0x01, 0x97, 0xc6, 0x8a, 0xaf, 0x5a,
	0xe8, 0xd2, 0x58, 0xda, 0x64, 0x38, 0x25, 0x86, 0x26, 0xf5, 0x3b, 0xb8, 0x0f, 0xb7, 0xce, 0xb1,
	0x20, 0xb3, 0x9c, 0x5d, 0xdd, 0xc4, 0xec, 0x67, 0x17, 0x3a, 0x23, 0x96, 0xc7, 0xcb, 0x69, 0x51,
	0x20, 0x0b, 0x73, 0x56, 0x30, 0x45, 0xae, 0x46, 0x45, 0x4b, 0x96, 0x18, 0x0f, 0x60, 0x44, 0x5f,
	0xb1, 0x44, 0x56, 0x75, 0xc1, 0xe8, 0x94, 0x98, 0xca, 0xe8, 0x03, 0x7a, 0x0f, 0x7c, 0x9a, 0xe2,
	0x19, 0x51, 0x46, 0xba, 0x22, 0x9e, 0x12, 0x48, 0x13, 0x9d, 0x5e, 0xa3, 0x48, 0xef, 0x1c, 0x1a,
	0x13, 0x79, 0x6b, 0x45, 0x71, 0x7b, 0xf0, 0xc9, 0xc6, 0xfe, 0x2b, 0x73, 0x14, 0x6a, 0x5b, 0x34,
	0x02, 0x98, 0x6a, 0x1a, 0x28, 0xe1, 0xdd, 0x96, 0xea, 0xe4, 0x93, 0xcd, 0x9d, 0xbc, 0xce, 0x5c,
	0x58, 0xf2, 0x11, 0xfc, 0xe9, 0xc0, 0xd6, 0x48, 0x0a, 0x09, 0x5f, 0xe4, 0x19, 0x27, 0xa8, 0x0f,
	0x77, 0xa6, 0x4b, 0xc6, 0x48, 0x26, 0xa2, 0x85, 0xbc, 0x5b, 0xb6, 0x4c, 0x27, 0x84, 0x19, 0x9e,
	0x6f, 0x1b, 0x95, 0xb4, 0xf8, 0x42, 0x29, 0x50, 0x0f, 0x76, 0x12, 0xcc, 0xd7, 0xc1, 0xae, 0x02,
	0x77, 0xa4, 0xbc, 0x84, 0x3c, 0x84, 0xb6, 0xc8, 0x05, 0x4e, 0x22, 0x2a, 0x48, 0xca, 0x15, 0x95,
	0xb5, 0x10, 0x94, 0x68, 0x28, 0x25, 0x92, 0x4f, 0xe5, 0x85, 0xd3, 0x97, 0x44, 0xf1, 0x59, 0x0b,
	0x3d, 0x29, 0x18, 0xd3, 0x97, 0x04, 0x1d, 0xc1, 0x16, 0xe5, 0x51, 0x11, 0x4a, 0x31, 0xeb, 0x85,
	0x40, 0xf9, 0x13, 0x13, 0x05, 0x05, 0xb0, 0x4d, 0x79, 0x74, 0x49, 0x99, 0x85, 0x34, 0x15, 0xa4,
	0x4d, 0xf9, 0x23, 0x29, 0x93, 0x98, 0xe0, 0x17, 0x07, 0x3a, 0x4f, 0xb0, 0x20, 0x5c, 0x14, 0x17,
	0x7e, 0x0c, 0x9e, 0xa9, 0xb4, 0x5e, 0x1b, 0xed, 0xc1, 0xf1, 0x46, 0x46, 0xd7, 0x7b, 0x2a, 0x2c,
	0x1c, 0xa0, 0x07, 0x50, 0x57, 0xa1, 0xdd, 0x8a, 0x45, 0x2e, 0x53, 0x1f, 0x2a, 0xd3, 0xe0, 0x1b,
	0xd8, 0x19, 0xb1, 0x3c, 0xcd, 0x05, 0xcd, 0xb3, 0x90, 0x3c, 0x5b, 0x12, 0x2e, 0xd0, 0x21, 0x40,
	0x8c, 0x69, 0x72, 0x15, 0xc5, 0x04, 0xeb, 0xd5, 0xe2, 0x5d, 0xfc, 0x2f, 0xf4, 0x95, 0xec, 0x21,
	0xc1, 0x72, 0xc1, 0xf8, 0x1c, 0x27, 0x44, 0xeb, 0x5d, 0xa3, 0xf7, 0xa4, 0x48, 0xaa, 0xcf, 0x9a,
	0x50, 0x97, 0x9a, 0xe0, 0x5b, 0xb8, 0x5d, 0xf2, 0xfd, 0x16, 0x08, 0x08, 0x7e, 0x75, 0xe0, 0x96,
	0x51, 0x16, 0x01, 0x86, 0xd0, 0x32, 0x7a, 0x95, 0xfa, 0x1b, 0xf8, 0xb7, 0xf6, 0xe8, 0x31, 0x34,
	0xb8, 0xc0, 0x6a, 0x8b, 0x4b, 0x47, 0xf7, 0xab, 0x3a, 0x1a, 0x4b, 0xa3, 0x82, 0x68, 0xed, 0x23,
	0x38, 0x2e, 0x96, 0x83, 0xe5, 0xf9, 0x00, 0xec, 0xd4, 0x47, 0xc5, 0x6e, 0xf1, 0x8d, 0x64, 0x18,
	0x07, 0xbf, 0x3b, 0xb0, 0x7b, 0x9d, 0x43, 0xd9, 0xb9, 0x29, 0xcd, 0x22, 0xbd, 0x23, 0xb4, 0x99,
	0x97, 0xd2, 0x6c, 0x64, 0xd7, 0x44, 0x8a, 0x5f, 0x18, 0xa5, 0x6b, 0x94, 0xf8, 0x85, 0x56, 0x1e,
	0x00, 0xa4, 0x04, 0x5b, 0x53, 0x39, 0x13, 0x4e, 0xe8, 0x4b, 0x89, 0x56, 0xcb, 0x81, 0x97, 0xaf,
	0x4c, 0xa4, 0xb6, 0x68, 0x5d, 0x5d, 0xfa, 0x6e, 0xf5, 0xa7, 0xcb, 0xf2, 0xe7, 0x4f, 0xad, 0x24,
	0xf8, 0x1a, 0x3a, 0x63, 0x82, 0xd9, 0x74, 0x5e, 0x24, 0xff, 0x19, 0xb4, 0x18, 0xe1, 0xcb, 0xa4,
	0x28, 0xff, 0xe6, 0xb6, 0x2d, 0x3c, 0x2c, 0x13, 0x11, 0x5a, 0xeb, 0xe0, 0x02, 0xb6, 0xca, 0x8a,
	0xd2, 0x86, 0xf6, 0x5f, 0xb7, 0xa1, 0xe5, 0x66, 0xe5, 0xd3, 0x9c, 0xe9, 0xab, 0xbb, 0xa1, 0x3e,
	0x04, 0x1f, 0xc2, 0xb6, 0xf5, 0xa4, 0x0b, 0xb3, 0x07, 0x4d, 0xae, 0x04, 0xc6, 0x9d, 0x39, 0x05,
	0x1f, 0x99, 0xb7, 0xc4, 0xe2, 0xfe, 0x0f, 0x9e, 0xda, 0x94, 0xab, 0xf2, 0xb5, 0xd4, 0x79, 0x18,
	0x07, 0x83, 0xd5, 0x13, 0xb2, 0x1a, 0xab, 0xb6, 0x59, 0x85, 0x57, 0x2b, 0x03, 0xbb, 0x1d, 0xaf,
	0x86, 0x71, 0xf0, 0x93, 0x03, 0x3b, 0x2b, 0x23, 0xc3, 0xd7, 0x26, 0xab, 0x6b, 0xef, 0x59, 0x1e,
	0xb2, 0xda, 0x7f, 0x1d, 0xb2, 0x1f, 0x1d, 0xd8, 0x36, 0xd7, 0x36, 0x39, 0xbd, 0xfe, 0xde, 0x6f,
	0x3f, 0x9b, 0x1e, 0xdc, 0x7e, 0x10, 0xc7, 0xaf, 0x4c, 0xd2, 0x1d, 0x68, 0x2c, 0x92, 0xa8, 0x28,
	0x7f, 0x7d, 0x91, 0x0c, 0xe3, 0xe0, 0x14, 0x50, 0x19, 0x69, 0x72, 0xff, 0xf7, 0xa1, 0x1b, 0xfc,
	0xe1, 0xda, 0x66, 0x18, 0x13, 0xf6, 0x5c, 0x0e, 0xc5, 0x02, 0xb6, 0x8d, 0x5a, 0xcb, 0x51, 0xbf,
	0x72, 0xc3, 0xaa, 0xe4, 0xf6, 0x8f, 0xab, 0x37, 0xb8, 0x4e, 0x31, 0x83, 0xb6, 0xa2, 0xf3, 0x5d,
	0xc5, 0x7b, 0x06, 0x1d, 0xdb, 0x4f, 0xef, 0x28, 0xe4, 0x80, 0xc1, 0xb6, 0x7e, 0x18, 0x2d, 0xcb,
	0x58, 0x7e, 0x4c, 0x4b, 0x01, 0xfa, 0x60, 0xa3, 0x2f, 0xf5, 0x49, 0x5e, 0x21, 0xe6, 0xfa, 0xd3,
	0x3b, 0xf8, 0xc1, 0x29, 0xbd, 0x75, 0x36, 0x2e, 0x57, 0xed, 0xa0, 0x65, 0x1c, 0xdd, 0xad, 0xd2,
	0x97, 0x6b, 0x8f, 0xe5, 0xfe, 0xe0, 0x26, 0x26, 0x26, 0x93, 0xbf, 0x9c, 0xe2, 0x2d, 0xb0, 0x79,
	0x24, 0xc5, 0xab, 0x85, 0x2a, 0x0f, 0x87, 0x4d, 0xe1, 0xa4, 0xba, 0x81, 0xa9, 0xf8, 0x12, 0x00,
	0x17, 0xa3, 0x81, 0x36, 0x5f, 0xe1, 0x1f, 0x13, 0xb7, 0x7f, 0x7a, 0x23, 0x1b, 0x73, 0xef, 0xe7,
	0x66, 0x7f, 0xda, 0x4b, 0x5f, 0x9a, 0xaf, 0x54, 0x54, 0xf1, 0xfb, 0xd4, 0x06, 0xef, 0x57, 0x85,
	0x9b, 0xb8, 0xdf, 0xaf, 0x96, 0xf1, 0x8a, 0x6f, 0xcf, 0xf6, 0x3c, 0xaa, 0xfe, 0x4d, 0xfb, 0x86,
	0x09, 0x9c, 0xb9, 0x23, 0x67, 0xd2, 0x54, 0xff, 0x73, 0x9e, 0xfe, 0x1d, 0x00, 0x00, 0xff, 0xff,
	0x1e, 0xf3, 0xe4, 0x3a, 0x91, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SearchServiceClient is the client API for SearchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchServiceClient interface {
	ProductSearch(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	BrandSearch(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	CategorySearch(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type searchServiceClient struct {
	cc *grpc.ClientConn
}

func NewSearchServiceClient(cc *grpc.ClientConn) SearchServiceClient {
	return &searchServiceClient{cc}
}

func (c *searchServiceClient) ProductSearch(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/io.github.benslabbert.trak.grpc.SearchService/productSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) BrandSearch(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/io.github.benslabbert.trak.grpc.SearchService/brandSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) CategorySearch(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/io.github.benslabbert.trak.grpc.SearchService/categorySearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SearchServiceServer is the server API for SearchService service.
type SearchServiceServer interface {
	ProductSearch(context.Context, *SearchRequest) (*SearchResponse, error)
	BrandSearch(context.Context, *SearchRequest) (*SearchResponse, error)
	CategorySearch(context.Context, *SearchRequest) (*SearchResponse, error)
}

// UnimplementedSearchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSearchServiceServer struct {
}

func (*UnimplementedSearchServiceServer) ProductSearch(ctx context.Context, req *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProductSearch not implemented")
}
func (*UnimplementedSearchServiceServer) BrandSearch(ctx context.Context, req *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BrandSearch not implemented")
}
func (*UnimplementedSearchServiceServer) CategorySearch(ctx context.Context, req *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CategorySearch not implemented")
}

func RegisterSearchServiceServer(s *grpc.Server, srv SearchServiceServer) {
	s.RegisterService(&_SearchService_serviceDesc, srv)
}

func _SearchService_ProductSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).ProductSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.github.benslabbert.trak.grpc.SearchService/ProductSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).ProductSearch(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_BrandSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).BrandSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.github.benslabbert.trak.grpc.SearchService/BrandSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).BrandSearch(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_CategorySearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).CategorySearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.github.benslabbert.trak.grpc.SearchService/CategorySearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).CategorySearch(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SearchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.github.benslabbert.trak.grpc.SearchService",
	HandlerType: (*SearchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "productSearch",
			Handler:    _SearchService_ProductSearch_Handler,
		},
		{
			MethodName: "brandSearch",
			Handler:    _SearchService_BrandSearch_Handler,
		},
		{
			MethodName: "categorySearch",
			Handler:    _SearchService_CategorySearch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/main/proto/proto.proto",
}

// LatestServiceClient is the client API for LatestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LatestServiceClient interface {
	Latest(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*LatestResponse, error)
}

type latestServiceClient struct {
	cc *grpc.ClientConn
}

func NewLatestServiceClient(cc *grpc.ClientConn) LatestServiceClient {
	return &latestServiceClient{cc}
}

func (c *latestServiceClient) Latest(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*LatestResponse, error) {
	out := new(LatestResponse)
	err := c.cc.Invoke(ctx, "/io.github.benslabbert.trak.grpc.LatestService/latest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LatestServiceServer is the server API for LatestService service.
type LatestServiceServer interface {
	Latest(context.Context, *Empty) (*LatestResponse, error)
}

// UnimplementedLatestServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLatestServiceServer struct {
}

func (*UnimplementedLatestServiceServer) Latest(ctx context.Context, req *Empty) (*LatestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Latest not implemented")
}

func RegisterLatestServiceServer(s *grpc.Server, srv LatestServiceServer) {
	s.RegisterService(&_LatestService_serviceDesc, srv)
}

func _LatestService_Latest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LatestServiceServer).Latest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.github.benslabbert.trak.grpc.LatestService/Latest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LatestServiceServer).Latest(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _LatestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.github.benslabbert.trak.grpc.LatestService",
	HandlerType: (*LatestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "latest",
			Handler:    _LatestService_Latest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/main/proto/proto.proto",
}

// PromotionServiceClient is the client API for PromotionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PromotionServiceClient interface {
	Promotions(ctx context.Context, in *PromotionRequest, opts ...grpc.CallOption) (*PromotionResponse, error)
}

type promotionServiceClient struct {
	cc *grpc.ClientConn
}

func NewPromotionServiceClient(cc *grpc.ClientConn) PromotionServiceClient {
	return &promotionServiceClient{cc}
}

func (c *promotionServiceClient) Promotions(ctx context.Context, in *PromotionRequest, opts ...grpc.CallOption) (*PromotionResponse, error) {
	out := new(PromotionResponse)
	err := c.cc.Invoke(ctx, "/io.github.benslabbert.trak.grpc.PromotionService/promotions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PromotionServiceServer is the server API for PromotionService service.
type PromotionServiceServer interface {
	Promotions(context.Context, *PromotionRequest) (*PromotionResponse, error)
}

// UnimplementedPromotionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPromotionServiceServer struct {
}

func (*UnimplementedPromotionServiceServer) Promotions(ctx context.Context, req *PromotionRequest) (*PromotionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Promotions not implemented")
}

func RegisterPromotionServiceServer(s *grpc.Server, srv PromotionServiceServer) {
	s.RegisterService(&_PromotionService_serviceDesc, srv)
}

func _PromotionService_Promotions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PromotionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).Promotions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.github.benslabbert.trak.grpc.PromotionService/Promotions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).Promotions(ctx, req.(*PromotionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PromotionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.github.benslabbert.trak.grpc.PromotionService",
	HandlerType: (*PromotionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "promotions",
			Handler:    _PromotionService_Promotions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/main/proto/proto.proto",
}

// ProductServiceClient is the client API for ProductService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductServiceClient interface {
	Product(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductResponse, error)
	AddProduct(ctx context.Context, in *AddProductRequest, opts ...grpc.CallOption) (*AddProductResponse, error)
}

type productServiceClient struct {
	cc *grpc.ClientConn
}

func NewProductServiceClient(cc *grpc.ClientConn) ProductServiceClient {
	return &productServiceClient{cc}
}

func (c *productServiceClient) Product(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductResponse, error) {
	out := new(ProductResponse)
	err := c.cc.Invoke(ctx, "/io.github.benslabbert.trak.grpc.ProductService/product", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) AddProduct(ctx context.Context, in *AddProductRequest, opts ...grpc.CallOption) (*AddProductResponse, error) {
	out := new(AddProductResponse)
	err := c.cc.Invoke(ctx, "/io.github.benslabbert.trak.grpc.ProductService/addProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductServiceServer is the server API for ProductService service.
type ProductServiceServer interface {
	Product(context.Context, *ProductRequest) (*ProductResponse, error)
	AddProduct(context.Context, *AddProductRequest) (*AddProductResponse, error)
}

// UnimplementedProductServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProductServiceServer struct {
}

func (*UnimplementedProductServiceServer) Product(ctx context.Context, req *ProductRequest) (*ProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Product not implemented")
}
func (*UnimplementedProductServiceServer) AddProduct(ctx context.Context, req *AddProductRequest) (*AddProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProduct not implemented")
}

func RegisterProductServiceServer(s *grpc.Server, srv ProductServiceServer) {
	s.RegisterService(&_ProductService_serviceDesc, srv)
}

func _ProductService_Product_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).Product(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.github.benslabbert.trak.grpc.ProductService/Product",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).Product(ctx, req.(*ProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_AddProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).AddProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.github.benslabbert.trak.grpc.ProductService/AddProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).AddProduct(ctx, req.(*AddProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.github.benslabbert.trak.grpc.ProductService",
	HandlerType: (*ProductServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "product",
			Handler:    _ProductService_Product_Handler,
		},
		{
			MethodName: "addProduct",
			Handler:    _ProductService_AddProduct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/main/proto/proto.proto",
}

// BrandServiceClient is the client API for BrandService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BrandServiceClient interface {
	Brand(ctx context.Context, in *BrandRequest, opts ...grpc.CallOption) (*BrandResponse, error)
}

type brandServiceClient struct {
	cc *grpc.ClientConn
}

func NewBrandServiceClient(cc *grpc.ClientConn) BrandServiceClient {
	return &brandServiceClient{cc}
}

func (c *brandServiceClient) Brand(ctx context.Context, in *BrandRequest, opts ...grpc.CallOption) (*BrandResponse, error) {
	out := new(BrandResponse)
	err := c.cc.Invoke(ctx, "/io.github.benslabbert.trak.grpc.BrandService/brand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BrandServiceServer is the server API for BrandService service.
type BrandServiceServer interface {
	Brand(context.Context, *BrandRequest) (*BrandResponse, error)
}

// UnimplementedBrandServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBrandServiceServer struct {
}

func (*UnimplementedBrandServiceServer) Brand(ctx context.Context, req *BrandRequest) (*BrandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Brand not implemented")
}

func RegisterBrandServiceServer(s *grpc.Server, srv BrandServiceServer) {
	s.RegisterService(&_BrandService_serviceDesc, srv)
}

func _BrandService_Brand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandServiceServer).Brand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.github.benslabbert.trak.grpc.BrandService/Brand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandServiceServer).Brand(ctx, req.(*BrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BrandService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.github.benslabbert.trak.grpc.BrandService",
	HandlerType: (*BrandServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "brand",
			Handler:    _BrandService_Brand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/main/proto/proto.proto",
}

// CategoryServiceClient is the client API for CategoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CategoryServiceClient interface {
	Category(ctx context.Context, in *CategoryRequest, opts ...grpc.CallOption) (*BrandResponse, error)
}

type categoryServiceClient struct {
	cc *grpc.ClientConn
}

func NewCategoryServiceClient(cc *grpc.ClientConn) CategoryServiceClient {
	return &categoryServiceClient{cc}
}

func (c *categoryServiceClient) Category(ctx context.Context, in *CategoryRequest, opts ...grpc.CallOption) (*BrandResponse, error) {
	out := new(BrandResponse)
	err := c.cc.Invoke(ctx, "/io.github.benslabbert.trak.grpc.CategoryService/category", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CategoryServiceServer is the server API for CategoryService service.
type CategoryServiceServer interface {
	Category(context.Context, *CategoryRequest) (*BrandResponse, error)
}

// UnimplementedCategoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCategoryServiceServer struct {
}

func (*UnimplementedCategoryServiceServer) Category(ctx context.Context, req *CategoryRequest) (*BrandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Category not implemented")
}

func RegisterCategoryServiceServer(s *grpc.Server, srv CategoryServiceServer) {
	s.RegisterService(&_CategoryService_serviceDesc, srv)
}

func _CategoryService_Category_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).Category(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.github.benslabbert.trak.grpc.CategoryService/Category",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).Category(ctx, req.(*CategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CategoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.github.benslabbert.trak.grpc.CategoryService",
	HandlerType: (*CategoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "category",
			Handler:    _CategoryService_Category_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/main/proto/proto.proto",
}
