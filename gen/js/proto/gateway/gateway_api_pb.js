/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.trak.grpc.gateway.v1.AddProductRequest', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.BrandMessage', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.BrandResponse', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.CategoryMessage', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.CategoryResponse', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.ChartContentMessage', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.ChartMessage', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.Empty', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.GetAllPromotionsResponse', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.LatestResponse', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.PageResponse', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.ProductMessage', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.ProductResponse', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.ProductStatsResponse', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.PromotionMessage', null, global);
goog.exportSymbol('proto.trak.grpc.gateway.v1.PromotionResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.Empty.displayName = 'proto.trak.grpc.gateway.v1.Empty';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.Empty}
 */
proto.trak.grpc.gateway.v1.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.Empty;
  return proto.trak.grpc.gateway.v1.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.Empty}
 */
proto.trak.grpc.gateway.v1.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.ChartMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.trak.grpc.gateway.v1.ChartMessage.repeatedFields_, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.ChartMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.ChartMessage.displayName = 'proto.trak.grpc.gateway.v1.ChartMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trak.grpc.gateway.v1.ChartMessage.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.ChartMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.ChartMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.ChartMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.ChartMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    labelsList: jspb.Message.getRepeatedField(msg, 1),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.trak.grpc.gateway.v1.ChartContentMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.ChartMessage}
 */
proto.trak.grpc.gateway.v1.ChartMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.ChartMessage;
  return proto.trak.grpc.gateway.v1.ChartMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.ChartMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.ChartMessage}
 */
proto.trak.grpc.gateway.v1.ChartMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addLabels(value);
      break;
    case 2:
      var value = new proto.trak.grpc.gateway.v1.ChartContentMessage;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.ChartContentMessage.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.ChartMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.ChartMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.ChartMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.ChartMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabelsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.trak.grpc.gateway.v1.ChartContentMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string labels = 1;
 * @return {!Array<string>}
 */
proto.trak.grpc.gateway.v1.ChartMessage.prototype.getLabelsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.trak.grpc.gateway.v1.ChartMessage.prototype.setLabelsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.trak.grpc.gateway.v1.ChartMessage.prototype.addLabels = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.trak.grpc.gateway.v1.ChartMessage.prototype.clearLabelsList = function() {
  this.setLabelsList([]);
};


/**
 * repeated ChartContentMessage content = 2;
 * @return {!Array<!proto.trak.grpc.gateway.v1.ChartContentMessage>}
 */
proto.trak.grpc.gateway.v1.ChartMessage.prototype.getContentList = function() {
  return /** @type{!Array<!proto.trak.grpc.gateway.v1.ChartContentMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.trak.grpc.gateway.v1.ChartContentMessage, 2));
};


/** @param {!Array<!proto.trak.grpc.gateway.v1.ChartContentMessage>} value */
proto.trak.grpc.gateway.v1.ChartMessage.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.trak.grpc.gateway.v1.ChartContentMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trak.grpc.gateway.v1.ChartContentMessage}
 */
proto.trak.grpc.gateway.v1.ChartMessage.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.trak.grpc.gateway.v1.ChartContentMessage, opt_index);
};


proto.trak.grpc.gateway.v1.ChartMessage.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.ChartContentMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.trak.grpc.gateway.v1.ChartContentMessage.repeatedFields_, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.ChartContentMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.ChartContentMessage.displayName = 'proto.trak.grpc.gateway.v1.ChartContentMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.ChartContentMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.ChartContentMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fillColor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    strokeColor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pointColor: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pointStrokeColor: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pointHighlightFill: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pointHighlightStroke: jspb.Message.getFieldWithDefault(msg, 7, ""),
    contentList: jspb.Message.getRepeatedField(msg, 8)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.ChartContentMessage}
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.ChartContentMessage;
  return proto.trak.grpc.gateway.v1.ChartContentMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.ChartContentMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.ChartContentMessage}
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFillColor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrokeColor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPointColor(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPointStrokeColor(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPointHighlightFill(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPointHighlightStroke(value);
      break;
    case 8:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setContentList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.ChartContentMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.ChartContentMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFillColor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStrokeColor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPointColor();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPointStrokeColor();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPointHighlightFill();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPointHighlightStroke();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writePackedUint32(
      8,
      f
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string fill_color = 2;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.getFillColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.setFillColor = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string stroke_color = 3;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.getStrokeColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.setStrokeColor = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string point_color = 4;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.getPointColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.setPointColor = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string point_stroke_color = 5;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.getPointStrokeColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.setPointStrokeColor = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string point_highlight_fill = 6;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.getPointHighlightFill = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.setPointHighlightFill = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string point_highlight_stroke = 7;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.getPointHighlightStroke = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.setPointHighlightStroke = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated uint32 content = 8;
 * @return {!Array<number>}
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.getContentList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<number>} value */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.setContentList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.addContent = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.trak.grpc.gateway.v1.ChartContentMessage.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.BrandMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.BrandMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.BrandMessage.displayName = 'proto.trak.grpc.gateway.v1.BrandMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.BrandMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.BrandMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.BrandMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.BrandMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.BrandMessage}
 */
proto.trak.grpc.gateway.v1.BrandMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.BrandMessage;
  return proto.trak.grpc.gateway.v1.BrandMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.BrandMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.BrandMessage}
 */
proto.trak.grpc.gateway.v1.BrandMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.BrandMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.BrandMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.BrandMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.BrandMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.BrandMessage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.BrandMessage.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.BrandMessage.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.BrandMessage.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.CategoryMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.CategoryMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.CategoryMessage.displayName = 'proto.trak.grpc.gateway.v1.CategoryMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.CategoryMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.CategoryMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.CategoryMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.CategoryMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.CategoryMessage}
 */
proto.trak.grpc.gateway.v1.CategoryMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.CategoryMessage;
  return proto.trak.grpc.gateway.v1.CategoryMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.CategoryMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.CategoryMessage}
 */
proto.trak.grpc.gateway.v1.CategoryMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.CategoryMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.CategoryMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.CategoryMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.CategoryMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.CategoryMessage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.CategoryMessage.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.CategoryMessage.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.CategoryMessage.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.ProductMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.trak.grpc.gateway.v1.ProductMessage.repeatedFields_, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.ProductMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.ProductMessage.displayName = 'proto.trak.grpc.gateway.v1.ProductMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trak.grpc.gateway.v1.ProductMessage.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.ProductMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.ProductMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.ProductMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imageUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    id: jspb.Message.getFieldWithDefault(msg, 5, 0),
    brand: (f = msg.getBrand()) && proto.trak.grpc.gateway.v1.BrandMessage.toObject(includeInstance, f),
    categoriesList: jspb.Message.toObjectList(msg.getCategoriesList(),
    proto.trak.grpc.gateway.v1.CategoryMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.ProductMessage}
 */
proto.trak.grpc.gateway.v1.ProductMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.ProductMessage;
  return proto.trak.grpc.gateway.v1.ProductMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.ProductMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.ProductMessage}
 */
proto.trak.grpc.gateway.v1.ProductMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageUrl(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 6:
      var value = new proto.trak.grpc.gateway.v1.BrandMessage;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.BrandMessage.deserializeBinaryFromReader);
      msg.setBrand(value);
      break;
    case 7:
      var value = new proto.trak.grpc.gateway.v1.CategoryMessage;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.CategoryMessage.deserializeBinaryFromReader);
      msg.addCategories(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.ProductMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.ProductMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.ProductMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBrand();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.trak.grpc.gateway.v1.BrandMessage.serializeBinaryToWriter
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.trak.grpc.gateway.v1.CategoryMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string product_url = 2;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.getProductUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.setProductUrl = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string price = 3;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.getPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.setPrice = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string image_url = 4;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.getImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.setImageUrl = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 id = 5;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional BrandMessage brand = 6;
 * @return {?proto.trak.grpc.gateway.v1.BrandMessage}
 */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.getBrand = function() {
  return /** @type{?proto.trak.grpc.gateway.v1.BrandMessage} */ (
    jspb.Message.getWrapperField(this, proto.trak.grpc.gateway.v1.BrandMessage, 6));
};


/** @param {?proto.trak.grpc.gateway.v1.BrandMessage|undefined} value */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.setBrand = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.trak.grpc.gateway.v1.ProductMessage.prototype.clearBrand = function() {
  this.setBrand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.hasBrand = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated CategoryMessage categories = 7;
 * @return {!Array<!proto.trak.grpc.gateway.v1.CategoryMessage>}
 */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.getCategoriesList = function() {
  return /** @type{!Array<!proto.trak.grpc.gateway.v1.CategoryMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.trak.grpc.gateway.v1.CategoryMessage, 7));
};


/** @param {!Array<!proto.trak.grpc.gateway.v1.CategoryMessage>} value */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.setCategoriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.trak.grpc.gateway.v1.CategoryMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trak.grpc.gateway.v1.CategoryMessage}
 */
proto.trak.grpc.gateway.v1.ProductMessage.prototype.addCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.trak.grpc.gateway.v1.CategoryMessage, opt_index);
};


proto.trak.grpc.gateway.v1.ProductMessage.prototype.clearCategoriesList = function() {
  this.setCategoriesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.PageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.PageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.PageResponse.displayName = 'proto.trak.grpc.gateway.v1.PageResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.PageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.PageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.PageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.PageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentPageNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lastPageNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalItems: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isLastPage: jspb.Message.getFieldWithDefault(msg, 5, false),
    isFirstPage: jspb.Message.getFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.PageResponse}
 */
proto.trak.grpc.gateway.v1.PageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.PageResponse;
  return proto.trak.grpc.gateway.v1.PageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.PageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.PageResponse}
 */
proto.trak.grpc.gateway.v1.PageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentPageNumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastPageNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalItems(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLastPage(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFirstPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.PageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.PageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.PageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.PageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentPageNumber();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getLastPageNumber();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTotalItems();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getIsLastPage();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsFirstPage();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional uint32 current_page_number = 1;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.PageResponse.prototype.getCurrentPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.PageResponse.prototype.setCurrentPageNumber = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 last_page_number = 2;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.PageResponse.prototype.getLastPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.PageResponse.prototype.setLastPageNumber = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 total_items = 3;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.PageResponse.prototype.getTotalItems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.PageResponse.prototype.setTotalItems = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 page_size = 4;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.PageResponse.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.PageResponse.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool is_last_page = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.trak.grpc.gateway.v1.PageResponse.prototype.getIsLastPage = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.trak.grpc.gateway.v1.PageResponse.prototype.setIsLastPage = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool is_first_page = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.trak.grpc.gateway.v1.PageResponse.prototype.getIsFirstPage = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.trak.grpc.gateway.v1.PageResponse.prototype.setIsFirstPage = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.LatestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.trak.grpc.gateway.v1.LatestResponse.repeatedFields_, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.LatestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.LatestResponse.displayName = 'proto.trak.grpc.gateway.v1.LatestResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trak.grpc.gateway.v1.LatestResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.LatestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.LatestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.LatestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.LatestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.trak.grpc.gateway.v1.ProductMessage.toObject, includeInstance),
    page: (f = msg.getPage()) && proto.trak.grpc.gateway.v1.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.LatestResponse}
 */
proto.trak.grpc.gateway.v1.LatestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.LatestResponse;
  return proto.trak.grpc.gateway.v1.LatestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.LatestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.LatestResponse}
 */
proto.trak.grpc.gateway.v1.LatestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.trak.grpc.gateway.v1.ProductMessage;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.ProductMessage.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    case 2:
      var value = new proto.trak.grpc.gateway.v1.PageResponse;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.PageResponse.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.LatestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.LatestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.LatestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.LatestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.trak.grpc.gateway.v1.ProductMessage.serializeBinaryToWriter
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.trak.grpc.gateway.v1.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProductMessage products = 1;
 * @return {!Array<!proto.trak.grpc.gateway.v1.ProductMessage>}
 */
proto.trak.grpc.gateway.v1.LatestResponse.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.trak.grpc.gateway.v1.ProductMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.trak.grpc.gateway.v1.ProductMessage, 1));
};


/** @param {!Array<!proto.trak.grpc.gateway.v1.ProductMessage>} value */
proto.trak.grpc.gateway.v1.LatestResponse.prototype.setProductsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.trak.grpc.gateway.v1.ProductMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trak.grpc.gateway.v1.ProductMessage}
 */
proto.trak.grpc.gateway.v1.LatestResponse.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.trak.grpc.gateway.v1.ProductMessage, opt_index);
};


proto.trak.grpc.gateway.v1.LatestResponse.prototype.clearProductsList = function() {
  this.setProductsList([]);
};


/**
 * optional PageResponse page = 2;
 * @return {?proto.trak.grpc.gateway.v1.PageResponse}
 */
proto.trak.grpc.gateway.v1.LatestResponse.prototype.getPage = function() {
  return /** @type{?proto.trak.grpc.gateway.v1.PageResponse} */ (
    jspb.Message.getWrapperField(this, proto.trak.grpc.gateway.v1.PageResponse, 2));
};


/** @param {?proto.trak.grpc.gateway.v1.PageResponse|undefined} value */
proto.trak.grpc.gateway.v1.LatestResponse.prototype.setPage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.trak.grpc.gateway.v1.LatestResponse.prototype.clearPage = function() {
  this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.trak.grpc.gateway.v1.LatestResponse.prototype.hasPage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.PromotionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.trak.grpc.gateway.v1.PromotionResponse.repeatedFields_, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.PromotionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.PromotionResponse.displayName = 'proto.trak.grpc.gateway.v1.PromotionResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trak.grpc.gateway.v1.PromotionResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.PromotionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.PromotionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.PromotionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.PromotionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.trak.grpc.gateway.v1.ProductMessage.toObject, includeInstance),
    pageResponse: (f = msg.getPageResponse()) && proto.trak.grpc.gateway.v1.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.PromotionResponse}
 */
proto.trak.grpc.gateway.v1.PromotionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.PromotionResponse;
  return proto.trak.grpc.gateway.v1.PromotionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.PromotionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.PromotionResponse}
 */
proto.trak.grpc.gateway.v1.PromotionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.trak.grpc.gateway.v1.ProductMessage;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.ProductMessage.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    case 2:
      var value = new proto.trak.grpc.gateway.v1.PageResponse;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.PageResponse.deserializeBinaryFromReader);
      msg.setPageResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.PromotionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.PromotionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.PromotionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.PromotionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.trak.grpc.gateway.v1.ProductMessage.serializeBinaryToWriter
    );
  }
  f = message.getPageResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.trak.grpc.gateway.v1.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProductMessage products = 1;
 * @return {!Array<!proto.trak.grpc.gateway.v1.ProductMessage>}
 */
proto.trak.grpc.gateway.v1.PromotionResponse.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.trak.grpc.gateway.v1.ProductMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.trak.grpc.gateway.v1.ProductMessage, 1));
};


/** @param {!Array<!proto.trak.grpc.gateway.v1.ProductMessage>} value */
proto.trak.grpc.gateway.v1.PromotionResponse.prototype.setProductsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.trak.grpc.gateway.v1.ProductMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trak.grpc.gateway.v1.ProductMessage}
 */
proto.trak.grpc.gateway.v1.PromotionResponse.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.trak.grpc.gateway.v1.ProductMessage, opt_index);
};


proto.trak.grpc.gateway.v1.PromotionResponse.prototype.clearProductsList = function() {
  this.setProductsList([]);
};


/**
 * optional PageResponse page_response = 2;
 * @return {?proto.trak.grpc.gateway.v1.PageResponse}
 */
proto.trak.grpc.gateway.v1.PromotionResponse.prototype.getPageResponse = function() {
  return /** @type{?proto.trak.grpc.gateway.v1.PageResponse} */ (
    jspb.Message.getWrapperField(this, proto.trak.grpc.gateway.v1.PageResponse, 2));
};


/** @param {?proto.trak.grpc.gateway.v1.PageResponse|undefined} value */
proto.trak.grpc.gateway.v1.PromotionResponse.prototype.setPageResponse = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.trak.grpc.gateway.v1.PromotionResponse.prototype.clearPageResponse = function() {
  this.setPageResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.trak.grpc.gateway.v1.PromotionResponse.prototype.hasPageResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.PromotionMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.PromotionMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.PromotionMessage.displayName = 'proto.trak.grpc.gateway.v1.PromotionMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.PromotionMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.PromotionMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.PromotionMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.PromotionMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    promotionId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    created: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.PromotionMessage}
 */
proto.trak.grpc.gateway.v1.PromotionMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.PromotionMessage;
  return proto.trak.grpc.gateway.v1.PromotionMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.PromotionMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.PromotionMessage}
 */
proto.trak.grpc.gateway.v1.PromotionMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPromotionId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCreated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.PromotionMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.PromotionMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.PromotionMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.PromotionMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPromotionId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getCreated();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.PromotionMessage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.PromotionMessage.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.PromotionMessage.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.PromotionMessage.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 promotion_id = 3;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.PromotionMessage.prototype.getPromotionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.PromotionMessage.prototype.setPromotionId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 created = 4;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.PromotionMessage.prototype.getCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.PromotionMessage.prototype.setCreated = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.ProductResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.ProductResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.ProductResponse.displayName = 'proto.trak.grpc.gateway.v1.ProductResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.ProductResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.ProductResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.ProductResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.ProductResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    product: (f = msg.getProduct()) && proto.trak.grpc.gateway.v1.ProductMessage.toObject(includeInstance, f),
    stats: (f = msg.getStats()) && proto.trak.grpc.gateway.v1.ProductStatsResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.ProductResponse}
 */
proto.trak.grpc.gateway.v1.ProductResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.ProductResponse;
  return proto.trak.grpc.gateway.v1.ProductResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.ProductResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.ProductResponse}
 */
proto.trak.grpc.gateway.v1.ProductResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.trak.grpc.gateway.v1.ProductMessage;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.ProductMessage.deserializeBinaryFromReader);
      msg.setProduct(value);
      break;
    case 2:
      var value = new proto.trak.grpc.gateway.v1.ProductStatsResponse;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.ProductStatsResponse.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.ProductResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.ProductResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.ProductResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.ProductResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProduct();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.trak.grpc.gateway.v1.ProductMessage.serializeBinaryToWriter
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.trak.grpc.gateway.v1.ProductStatsResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProductMessage product = 1;
 * @return {?proto.trak.grpc.gateway.v1.ProductMessage}
 */
proto.trak.grpc.gateway.v1.ProductResponse.prototype.getProduct = function() {
  return /** @type{?proto.trak.grpc.gateway.v1.ProductMessage} */ (
    jspb.Message.getWrapperField(this, proto.trak.grpc.gateway.v1.ProductMessage, 1));
};


/** @param {?proto.trak.grpc.gateway.v1.ProductMessage|undefined} value */
proto.trak.grpc.gateway.v1.ProductResponse.prototype.setProduct = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.trak.grpc.gateway.v1.ProductResponse.prototype.clearProduct = function() {
  this.setProduct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.trak.grpc.gateway.v1.ProductResponse.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProductStatsResponse stats = 2;
 * @return {?proto.trak.grpc.gateway.v1.ProductStatsResponse}
 */
proto.trak.grpc.gateway.v1.ProductResponse.prototype.getStats = function() {
  return /** @type{?proto.trak.grpc.gateway.v1.ProductStatsResponse} */ (
    jspb.Message.getWrapperField(this, proto.trak.grpc.gateway.v1.ProductStatsResponse, 2));
};


/** @param {?proto.trak.grpc.gateway.v1.ProductStatsResponse|undefined} value */
proto.trak.grpc.gateway.v1.ProductResponse.prototype.setStats = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.trak.grpc.gateway.v1.ProductResponse.prototype.clearStats = function() {
  this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.trak.grpc.gateway.v1.ProductResponse.prototype.hasStats = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.ProductStatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.ProductStatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.ProductStatsResponse.displayName = 'proto.trak.grpc.gateway.v1.ProductStatsResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.ProductStatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.ProductStatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.ProductStatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.ProductStatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    minPrice: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxPrice: jspb.Message.getFieldWithDefault(msg, 2, 0),
    meanPrice: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    chart: (f = msg.getChart()) && proto.trak.grpc.gateway.v1.ChartMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.ProductStatsResponse}
 */
proto.trak.grpc.gateway.v1.ProductStatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.ProductStatsResponse;
  return proto.trak.grpc.gateway.v1.ProductStatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.ProductStatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.ProductStatsResponse}
 */
proto.trak.grpc.gateway.v1.ProductStatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinPrice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMeanPrice(value);
      break;
    case 4:
      var value = new proto.trak.grpc.gateway.v1.ChartMessage;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.ChartMessage.deserializeBinaryFromReader);
      msg.setChart(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.ProductStatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.ProductStatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.ProductStatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.ProductStatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinPrice();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMaxPrice();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMeanPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getChart();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.trak.grpc.gateway.v1.ChartMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 min_price = 1;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.ProductStatsResponse.prototype.getMinPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.ProductStatsResponse.prototype.setMinPrice = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 max_price = 2;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.ProductStatsResponse.prototype.getMaxPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.ProductStatsResponse.prototype.setMaxPrice = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double mean_price = 3;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.ProductStatsResponse.prototype.getMeanPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.ProductStatsResponse.prototype.setMeanPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional ChartMessage chart = 4;
 * @return {?proto.trak.grpc.gateway.v1.ChartMessage}
 */
proto.trak.grpc.gateway.v1.ProductStatsResponse.prototype.getChart = function() {
  return /** @type{?proto.trak.grpc.gateway.v1.ChartMessage} */ (
    jspb.Message.getWrapperField(this, proto.trak.grpc.gateway.v1.ChartMessage, 4));
};


/** @param {?proto.trak.grpc.gateway.v1.ChartMessage|undefined} value */
proto.trak.grpc.gateway.v1.ProductStatsResponse.prototype.setChart = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.trak.grpc.gateway.v1.ProductStatsResponse.prototype.clearChart = function() {
  this.setChart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.trak.grpc.gateway.v1.ProductStatsResponse.prototype.hasChart = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.CategoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.trak.grpc.gateway.v1.CategoryResponse.repeatedFields_, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.CategoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.CategoryResponse.displayName = 'proto.trak.grpc.gateway.v1.CategoryResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trak.grpc.gateway.v1.CategoryResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.CategoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.CategoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.CategoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.CategoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.trak.grpc.gateway.v1.ProductMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.CategoryResponse}
 */
proto.trak.grpc.gateway.v1.CategoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.CategoryResponse;
  return proto.trak.grpc.gateway.v1.CategoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.CategoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.CategoryResponse}
 */
proto.trak.grpc.gateway.v1.CategoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCategoryId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.trak.grpc.gateway.v1.ProductMessage;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.ProductMessage.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.CategoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.CategoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.CategoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.CategoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.trak.grpc.gateway.v1.ProductMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 category_id = 1;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.CategoryResponse.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.CategoryResponse.prototype.setCategoryId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.CategoryResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.CategoryResponse.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ProductMessage products = 3;
 * @return {!Array<!proto.trak.grpc.gateway.v1.ProductMessage>}
 */
proto.trak.grpc.gateway.v1.CategoryResponse.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.trak.grpc.gateway.v1.ProductMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.trak.grpc.gateway.v1.ProductMessage, 3));
};


/** @param {!Array<!proto.trak.grpc.gateway.v1.ProductMessage>} value */
proto.trak.grpc.gateway.v1.CategoryResponse.prototype.setProductsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.trak.grpc.gateway.v1.ProductMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trak.grpc.gateway.v1.ProductMessage}
 */
proto.trak.grpc.gateway.v1.CategoryResponse.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.trak.grpc.gateway.v1.ProductMessage, opt_index);
};


proto.trak.grpc.gateway.v1.CategoryResponse.prototype.clearProductsList = function() {
  this.setProductsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.BrandResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.trak.grpc.gateway.v1.BrandResponse.repeatedFields_, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.BrandResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.BrandResponse.displayName = 'proto.trak.grpc.gateway.v1.BrandResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trak.grpc.gateway.v1.BrandResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.BrandResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.BrandResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.BrandResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.BrandResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    brandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.trak.grpc.gateway.v1.ProductMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.BrandResponse}
 */
proto.trak.grpc.gateway.v1.BrandResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.BrandResponse;
  return proto.trak.grpc.gateway.v1.BrandResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.BrandResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.BrandResponse}
 */
proto.trak.grpc.gateway.v1.BrandResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBrandId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.trak.grpc.gateway.v1.ProductMessage;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.ProductMessage.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.BrandResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.BrandResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.BrandResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.BrandResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBrandId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.trak.grpc.gateway.v1.ProductMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 brand_id = 1;
 * @return {number}
 */
proto.trak.grpc.gateway.v1.BrandResponse.prototype.getBrandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.trak.grpc.gateway.v1.BrandResponse.prototype.setBrandId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.BrandResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.BrandResponse.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ProductMessage products = 3;
 * @return {!Array<!proto.trak.grpc.gateway.v1.ProductMessage>}
 */
proto.trak.grpc.gateway.v1.BrandResponse.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.trak.grpc.gateway.v1.ProductMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.trak.grpc.gateway.v1.ProductMessage, 3));
};


/** @param {!Array<!proto.trak.grpc.gateway.v1.ProductMessage>} value */
proto.trak.grpc.gateway.v1.BrandResponse.prototype.setProductsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.trak.grpc.gateway.v1.ProductMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trak.grpc.gateway.v1.ProductMessage}
 */
proto.trak.grpc.gateway.v1.BrandResponse.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.trak.grpc.gateway.v1.ProductMessage, opt_index);
};


proto.trak.grpc.gateway.v1.BrandResponse.prototype.clearProductsList = function() {
  this.setProductsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.repeatedFields_, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.GetAllPromotionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.displayName = 'proto.trak.grpc.gateway.v1.GetAllPromotionsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.GetAllPromotionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    promotionsList: jspb.Message.toObjectList(msg.getPromotionsList(),
    proto.trak.grpc.gateway.v1.PromotionMessage.toObject, includeInstance),
    pageResponse: (f = msg.getPageResponse()) && proto.trak.grpc.gateway.v1.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.GetAllPromotionsResponse}
 */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.GetAllPromotionsResponse;
  return proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.GetAllPromotionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.GetAllPromotionsResponse}
 */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.trak.grpc.gateway.v1.PromotionMessage;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.PromotionMessage.deserializeBinaryFromReader);
      msg.addPromotions(value);
      break;
    case 2:
      var value = new proto.trak.grpc.gateway.v1.PageResponse;
      reader.readMessage(value,proto.trak.grpc.gateway.v1.PageResponse.deserializeBinaryFromReader);
      msg.setPageResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.GetAllPromotionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPromotionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.trak.grpc.gateway.v1.PromotionMessage.serializeBinaryToWriter
    );
  }
  f = message.getPageResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.trak.grpc.gateway.v1.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PromotionMessage promotions = 1;
 * @return {!Array<!proto.trak.grpc.gateway.v1.PromotionMessage>}
 */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.prototype.getPromotionsList = function() {
  return /** @type{!Array<!proto.trak.grpc.gateway.v1.PromotionMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.trak.grpc.gateway.v1.PromotionMessage, 1));
};


/** @param {!Array<!proto.trak.grpc.gateway.v1.PromotionMessage>} value */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.prototype.setPromotionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.trak.grpc.gateway.v1.PromotionMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trak.grpc.gateway.v1.PromotionMessage}
 */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.prototype.addPromotions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.trak.grpc.gateway.v1.PromotionMessage, opt_index);
};


proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.prototype.clearPromotionsList = function() {
  this.setPromotionsList([]);
};


/**
 * optional PageResponse page_response = 2;
 * @return {?proto.trak.grpc.gateway.v1.PageResponse}
 */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.prototype.getPageResponse = function() {
  return /** @type{?proto.trak.grpc.gateway.v1.PageResponse} */ (
    jspb.Message.getWrapperField(this, proto.trak.grpc.gateway.v1.PageResponse, 2));
};


/** @param {?proto.trak.grpc.gateway.v1.PageResponse|undefined} value */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.prototype.setPageResponse = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.prototype.clearPageResponse = function() {
  this.setPageResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.trak.grpc.gateway.v1.GetAllPromotionsResponse.prototype.hasPageResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trak.grpc.gateway.v1.AddProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trak.grpc.gateway.v1.AddProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trak.grpc.gateway.v1.AddProductRequest.displayName = 'proto.trak.grpc.gateway.v1.AddProductRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trak.grpc.gateway.v1.AddProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.trak.grpc.gateway.v1.AddProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trak.grpc.gateway.v1.AddProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.AddProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trak.grpc.gateway.v1.AddProductRequest}
 */
proto.trak.grpc.gateway.v1.AddProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trak.grpc.gateway.v1.AddProductRequest;
  return proto.trak.grpc.gateway.v1.AddProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trak.grpc.gateway.v1.AddProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trak.grpc.gateway.v1.AddProductRequest}
 */
proto.trak.grpc.gateway.v1.AddProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trak.grpc.gateway.v1.AddProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trak.grpc.gateway.v1.AddProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trak.grpc.gateway.v1.AddProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trak.grpc.gateway.v1.AddProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.trak.grpc.gateway.v1.AddProductRequest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.trak.grpc.gateway.v1.AddProductRequest.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.trak.grpc.gateway.v1);
